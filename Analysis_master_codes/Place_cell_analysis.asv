clear
clc;

fpth='/Volumes/cohen_lab/Lab/Labmembers/Byung Hun Lee/Data/20220627_Treadmill/';
fnm='20220626_M2_last.csv';
[fpath] = uigetfile_n_dir();

for i=1:length(fpath)

load(fullfile(fpath{i},"settings.mat"))
filename=[fpath{i} 'experimental_parameters.txt'];
[a,b]=system(sprintf('GetFileInfo "%s"',filename)); s=strfind(b,'created: ')+9; crdat=b(s:s+18);
image_start=datestr(datenum(crdat));
dt=datetime(image_start(end-8:end),'InputFormat','HH:mm:ss'); dt.Format = 'HH:mm:ss';
Sz = importdata([fpath{i} '/experimental_parameters.txt']);
sz1=Sz.data(1); sz2=Sz.data(2);
a=find(DAQ_waves.amplitude(1,[1:500])); frm_rate=1/((a(2)-a(1)-2)*1e-5);
frm_end=sum(DAQ_waves.amplitude(1,:)); f_seg=[[1:10000:frm_end] frm_end+1];

[Arduino_data reward_pos lap_dist]=match_treadmill_DAQ([fpth fnm],1e-5,DAQ_data,1.27*1e-3,2); % time, treadmill, Reward, Run
Arduino_data(:,1)=Arduino_data(:,1)*(1/frm_rate*1000)/(1/frm_rate*1000+0.02);
mov_test=vm([fpath{i}],[351:550]);

for j=1:length(f_seg)-1
    g=1;
    try 
    mov=vm([fpath],[f_seg(i):f_seg(i+1)+10]); 
    catch % when the image ends
    g=2;
    mov=vm([fpath],[f_seg(i):f_seg(i+1)-1]);    
    end
    [mov_mc,xyField]=optical_flow_motion_correction_LBH(mov,mov_ref);

    options_rigid = NoRMCorreSetParms('d1',size(mov_mc,1),'d2',size(mov_mc,2),'bin_width',200,'max_shift',30,'us_fac',50,'init_batch',200);
    tic; [mov_mc,shifts1,template1,options_rigid] = normcorre(mov_mc,options_rigid); toc

    mov_mc=vm(mov_mc);
    mov_mc.transpose.savebin([fpath 'motion_corrected/mc' num2str(i,'%02d') '.bin'])
    
    mcTrace = squeeze(mean(xyField,[1 2]));
    save([fpath{i} '/mcTrace.mat'],'mcTrace')

    clear mov_mc mov
end

end
%%
[ref_mask refSig]=clicky(double(mov_test));

%% Motion correction
try
    load("220628_0151_cellmask.mat")
catch
    [ref_mask refSig]=clicky(double(mov_test));
end

volt=[];
mkdir([fpath 'motion_corrected'])
mov_test=vm([fpath],[151:250]);
mov_test = single(mov_test)./single(max(mov_test.data(:)));
mov_test = movmean(mov_test,10,3);
mov_ref = squeeze(median(mov_test,3));

for i=1:length(f_seg)-1
    g=1;
    try 
    mov=vm([fpath],[f_seg(i):f_seg(i+1)+10]);
    catch
    g=2;
    mov=vm([fpath],[f_seg(i):f_seg(i+1)-1]);    
    end
    [mov_mc,xyField]=optical_flow_motion_correction_LBH(mov,mov_ref);
      mov_mc = mov_mc - min(mov_mc(:));
    options_rigid = NoRMCorreSetParms('d1',size(mov_mc,1),'d2',size(mov_mc,2),'bin_width',200,'max_shift',30,'us_fac',50,'init_batch',200);
    tic; [mov_mc,shifts1,template1,options_rigid] = normcorre(mov_mc,options_rigid); toc

    mov_mc=vm(mov_mc);
    mov_mc.transpose.savebin([fpath 'motion_corrected/mc' num2str(i,'%02d') '.bin'])
    if g==1
    tmp=apply_clicky(ref_mask,double(mov_mc(:,:,1:end-11)),'No');
    else
    tmp=apply_clicky(ref_mask,double(mov_mc(:,:,1:end)),'No');
    end
    volt=[volt -(tmp-median(tmp,2))'];
end

save("20220723_voltage_trace_mc","volt",'ref_mask');

%% voltage signal extraction
volt=[];
load('20220803_mask.mat','c_ftprnt')
for i=1:length(f_seg)-1
    i
    try
    mov_mc=readBinMov_times([fpath 'motion_corrected/mc' num2str(i,'%02d') '.bin'],size(mov_test,1),size(mov_test,2),[1:10000]);
    catch
    mov_mc=readBinMov([fpath 'motion_corrected/mc' num2str(i,'%02d') '.bin'],size(mov_test,1),size(mov_test,2));    
    end
    mov_vec=double(tovec(mov_mc));
    tmp=tovec(c_ftprnt)'*mov_vec;

    volt=[volt -(tmp-median(tmp,2))];
end
save("20220803_voltage_trace_mc.mat","volt",'c_ftprnt');
%% spike finding

clear volt_lp spike volt_hp

for i=1:size(volt,1)
    volt_lp(i,:)=movmean(volt(i,:),100,2);
    

    %volt_lp(i,:)=lowpass(volt(i,:),3,800);
    volt_hp(i,:)=volt(i,:)-volt_lp(i,:);
    thres=get_threshold(volt_hp(i,:));
    spike(i,:)=zeros(1,size(volt,2));
    [pks s_tmp width prom]=findpeaks(volt_hp(i,:));
    s_tmp=s_tmp(find(pks>thres));
    spike(i,s_tmp)=1;
    %     plot(volt(i,:)-median(volt(i,:))+i*300)
    % hold all
    % plot(volt_lp(i,:)-median(volt(i,:))+i*300,'r')
end
 
g=1; figure; scale=5000;
for i=69%1:size(volt,1)


    plot([1:size(volt,2)],volt(i,1:end)+g*scale,'color',[0.7 0.7 0.7])
    hold all
    text(0,i*130,num2str(i))
    plot(find(spike(i,:)),volt(i,find(spike(i,:)))+g*scale,'r.','markersize',3)
    plot([1:size(volt,2)],volt_lp(i,:)+g*scale,'k')
    line([0 size(volt,2)],[g*scale g*scale],'color',[0.6 0.6 0.6])
    g=g+1;
end
yyaxis right
plot(Arduino_data(:,2))
plot(Arduino_data(:,3)*4000,'k')
axis tight

%% place voltage movie
noi=[4 6 12 24 26 30 37 51 55];
place_cell_movie(['test_pc_video'],Arduino_data,volt,spike,noi,15000,mov_test,ref_mask)

%% Place triggered average movie
place_bin=30; %number of bin, 45 -> ~20 mm per bin
bin_dist=ceil(Arduino_data(:,2)/(lap_dist/place_bin)); bin_dist(~Arduino_data(:,4))=NaN;
for p=1:place_bin; PTA{p}=[]; end

for i=1:length(f_seg)-1
    i
    % load movie during walking
    mov_seg=double(readBinMov_times([fpath '/motion_corrected/mc' num2str(i,'%02d') '.bin']...
        ,size(mov_test,1),size(mov_test,2),find(Arduino_data(f_seg(i):f_seg(i+1)-1,4))));
    tmp=bin_dist(f_seg(i):f_seg(i+1)-1); tmp=tmp(find(Arduino_data(f_seg(i):f_seg(i+1)-1,4)));
    p_l=(unique(bin_dist(f_seg(i):f_seg(i+1)-1)))';
    for p=p_l(find(~isnan(p_l)))
        PTA{p}(:,:,[size(PTA{p},3)+1:size(PTA{p},3)+sum(tmp==p)])=mean(mov_seg,3)-(mov_seg(:,:,find(tmp==p)));
    end
end
for p=1:place_bin
    PTA_movie(:,:,p)=mean(PTA{p},3,'omitnan');
end

%% Place triggered average trace; Voltage trace, Spike
place_bin=30; %number of bin, 45 -> ~20 mm per bin
bin_dist=ceil(Arduino_data(:,2)/(lap_dist/place_bin)); 
bin_dist(~Arduino_data(:,4))=NaN;
clear place_volt place_volt_lp place_spike
for i=1:size(volt,1)
    for p=1:place_bin
        tmp=find(bin_dist==p);
        place_volt(i,p)=mean(volt(i,tmp));
        place_volt_lp(i,p)=mean(volt_lp(i,tmp));
        place_spike(i,p)=mean(spike(i,tmp));
    end
    %place_volt=movmean(place_volt,3,2);
    place_volt=(place_volt-min(place_volt,[],2))./(max(place_volt,[],2)-min(place_volt,[],2));
    %place_volt_lp=movmean(place_volt_lp,3,2);
    place_volt_lp=(place_volt_lp-min(place_volt_lp,[],2))./(max(place_volt_lp,[],2)-min(place_volt_lp,[],2));
    place_spike=movmean(place_spike,3,2);%-min(place_volt,2);
    place_spike=(place_spike-min(place_spike,[],2))./(max(place_spike,[],2)-min(place_spike,[],2));
end

% sort by spike #
[a b]=sort(place_spike,2,'descend');
put_pc=find(max(place_spike,[],2)>std(a(:,1:round(size(a,2)*0.3)),0,2)*2);
%calculate centroid of place field
%[a c]=sort(place_spike(put_pc,:)*[1:place_bin]'./sum(place_spike(put_pc,:),2),'ascend'); %calculate centroid
%calculate maximum of place field
[a arg]=max(place_spike(put_pc,:),[],2);
[a c]=sort(arg);
order=[c ;setdiff([1:size(volt,1)],put_pc)'];
figure;
subplot(1,3,1)
imagesc(place_volt(order,:)); axis tight; hold on;
line(repmat(ceil(reward_pos/(lap_dist/place_bin)),1,2),[0 length(order)+0.5],'color','r');
subplot(1,3,2)
imagesc(place_volt_lp(order,:)); axis tight; hold on;
line(repmat(ceil(reward_pos/(lap_dist/place_bin)),1,2),[0 length(order)+0.5],'color','r');
subplot(1,3,3)
imagesc(place_spike(order,:)); axis tight; hold on;
line(repmat(ceil(reward_pos/(lap_dist/place_bin)),1,2),[0 length(order)+0.5],'color','r');

% now plot by every laps
clear lap_place_spike lap_place_volt lap_place_volt_lp
figure; noi=[38]; l=bwlabel(ceil(Arduino_data(:,2)/(lap_dist/place_bin))==place_bin)+1;
g=1; R=zeros(size(l,1),1);
show_row=2;
for i=1:max(l); [a b]=max(find(l==i)); R(a)=1; end; R=cumsum(R);
for n=noi
    for r=1:max(R)-1 %laps
        for p=1:place_bin %place bin
            tmp=(bin_dist==p & R==r);
            if length(find(tmp))==1; tmp=[]; end
            lap_place_volt{n}(r,p)=mean(volt(n,find(tmp)),'omitnan');
            lap_place_spike{n}(r,p)=mean(spike(n,find(tmp)),'omitnan');
        end
    end
    % voltage trace
    subplot(show_row,16,(ceil(g/8)-1)*16+mod(g,8)*2-1+16*(mod(g,8)==0))
    %figure;
    imagesc([lap_place_volt{n}-min(lap_place_volt{n}(:)); zeros(3,place_bin);...
    40*place_volt(n,:)]);

    hold on;
    line(repmat(ceil(reward_pos/(lap_dist/place_bin)),1,2),[0 max(R)+0.5],'color','r','linestyle',':');
    text(1,-5,[num2str(n) 'th neuron'],'Fontsize',6)
    axis tight off
    %figure;
    %plot([1:place_bin],place_volt(n,:))
    % mean voltage trace by place bin
    %figure; 
    subplot(show_row,16,(ceil(g/8)-1)*16+mod(g,8)*2+16*(mod(g,8)==0))
    imagesc([lap_place_spike{n}; zeros(3,place_bin);...
    0.1*(place_spike(n,:)-min(place_spike(n,:)))/(max(place_spike(n,:)-min(place_spike(n,:))))]);
    hold on;
    line(repmat(ceil(reward_pos/(lap_dist/place_bin)),1,2),[0 max(R)+0.5],'color','r','linestyle',':');
    axis tight off
    %figure;
    %plot([1:place_bin],place_spike(n,:))
    g=g+1;
end


%% show raw voltage trace at place bin
cmap=winter(30); place_bin=30;
bin_dist=ceil(Arduino_data(:,2)/(lap_dist/place_bin));
l=bwlabel(ceil(Arduino_data(:,2)/(lap_dist/place_bin))==place_bin)+1; R=zeros(size(l,1),1);
for i=1:max(l); [a b]=max(find(l==i)); R(a)=1; end; R=cumsum(R);
figure; noi=38; rng=[4000 3000]; scale=7000;
for i=0:max(R)
    try 
        tmp=find((bin_dist==27 & R==i));
        ind(i+1)=tmp(1);
        plot([1:sum(rng)+1]*1.25,volt(noi,tmp(1)-rng(1):tmp(1)+rng(2))+i*scale,'color',cmap(i+1,:))
        hold all
        line([1 sum(rng)+1]*1.25,[i*scale i*scale],'color',[0.6 0.6 0.6]);
        text([-400]*1.25,i*scale,[num2str((tmp(1)-rng(1))*1.25*1e-3,'%.1f') 's'])
        text([sum(rng)+50]*1.25,i*scale,[num2str((tmp(1)+rng(2))*1.25*1e-3,'%.1f') 's'])
        s_tmp=find(spike(noi,tmp(1)-rng(1):tmp(1)+rng(2)));
        plot([s_tmp]*1.25,volt(noi,tmp(1)-rng(1)-1+s_tmp)+i*scale,'r.')
    end
end
yyaxis right
line([rng(1) rng(1)]*1.25,[0 1],'color','c')
axis off
% gg=1;
% for p=[25:30]
%     t=nan(3001,1); tmp2=bin_dist==p;
%     plot([1:1:4001]*1.25,tmp2(tmp(1)-3000:tmp(1)+1000),'color',cmap(gg,:),'marker','.')
%     gg=gg+1;
% end
% axis off



%% Convert to firing rate and plot Firing rate vs place

bin_time=500; %ms
tmp=movsum(spike,bin_time/frm_rate,2);
frame_ind=[bin_time/frm_rate-1:bin_time/frm_rate:size(tmp,2)];
%FR=tmp(:,frame_ind)*1000/bin_time; %Firing rate (Hz)
FR=tmp*1000/bin_time;
bin_dist=ceil(Arduino_data(:,2)/(lap_dist/45));

bin_time=100; %different bin time with firing rate
frame_ind=[bin_time/frm_rate-1:bin_time/frm_rate:size(tmp,2)];
FR=FR(:,frame_ind); FR(:,frame_ind<16000)=0;
neuron_id=[38]; g=1;
for i=neuron_id
    cline([bin_time:bin_time:size(FR,2)*bin_time]/1000,g*5000+bin_dist(frame_ind)',...
        zeros(size(FR,2),1)',round(FR(i,:))+1,jet(max(round(FR(i,:))+1)),3);
    %cline([1:1:size(FR,2)],g*5000+Arduino_data(:,2)',...
    %zeros(size(FR,2),1)',round(FR(i,:))+1,jet(max(round(FR(i,:))+1)));
    hold all
    g=g+1;
end
yyaxis right
plot(Arduino_data(:,1),Arduino_data(:,3),'--')
axis tight off
%% Reward/Stim triggered movie
clear rng RTM
range=[100 100];
%R=find(Arduino_data(:,3)==1); g=1;
R=find([zeros(1,20000) spike(37,20001:end)]==1)'; g=1;
for i=R'
    rng(g,:)=[ceil((i-range(1))/(f_seg(2)-1)) mod(i-range(1),f_seg(2)-1) ...
        ceil((i+range(2))/(f_seg(2)-1)) mod(i+range(2),f_seg(2)-1)];
    if rng(g,1)==rng(g,3)
        tmp=double(readBinMov_times([fpath '/motion_corrected/mc' num2str(rng(g,1),'%02d') '.bin']...
            ,size(mov_test,1),size(mov_test,2),[rng(g,2):rng(g,4)]));
    else
        tmp=double(readBinMov_times([fpath '/motion_corrected/mc' num2str(rng(g,1),'%02d') '.bin']...
            ,size(mov_test,1),size(mov_test,2),[rng(g,2):f_seg(2)-1]));
        tmp2=double(readBinMov_times([fpath '/motion_corrected/mc' num2str(rng(g,3),'%02d') '.bin']...
            ,size(mov_test,1),size(mov_test,2),[1:rng(g,4)]));
        tmp=cat(3,tmp,tmp2);
    end
    RTM(:,:,:,g)=tmp;
    g=g+1;
end
RTM_movie=-mean(RTM,4)+mean(mean(RTM,4),3);

%% STA
clear ST 
noi=37; range=[100 100];
%s=find([zeros(1,20000) spike(noi,20001:end)]==1); 
s=find([spike(noi,:)]==1);
g=1;
for i=s
    try
        ST(:,:,g)=volt(:,i-range(1):i+range(2));
        g=g+1;
    end
end
STA=mean(ST,3);
for i=37%1:size(volt,1)
plot([-range(1):1:range(1)]*1.25,STA(i,:))
hold all
%text([-100],STA(i,1),num2str(i))
end
%% synchronous spike
clear strace synchro_c_list

spike_threshold=5;
sp=find(sum(spike,1)==spike_threshold);
synchro_c_list=NaN(max(sum(spike,1)),length(sp));
g=1;
for s=1:length(sp)
synchro_c_list(1:sum(spike(:,sp(s))),s)=find(spike(:,sp(s)));
    try
strace(:,:,g)=volt(:,sp(s)-200:sp(s)+200)-median(volt(:,sp(s)-200:sp(s)+200),2);
g=g+1;
    end
end

[synchro_cell]=unique(synchro_c_list);
for i=1:size(synchro_cell,1)
synchro_cell(i,2)=sum((synchro_c_list(:)==synchro_cell(i)));
end
synchro_cell(isnan(synchro_cell(:,1)),:)=[];

sta=mean(strace,3);
figure;
g=0; scale=500;
for noi=synchro_cell(find(synchro_cell(:,2)<=10),1)'
plot([-200:200]*1.25,sta(noi,:)+g*scale);
hold all
g=g+1;
end


